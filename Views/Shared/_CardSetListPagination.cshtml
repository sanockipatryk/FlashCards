@model PaginationViewModel

<nav aria-label="Pagination">
	@{
		if (Model.NumberOfPages >= 1)
		{
			<ul class="pagination d-flex justify-content-center align-items-end">
				@if (Model.CurrentPage != 1)
				{
				<li class="page-item">
					<a class="page-link" asp-route-page="1" aria-label="First">
						<span aria-hidden="true">&laquo;</span>
					</a>
				</li>
				<li class="page-item">
					<a class="page-link" asp-route-page="@(Model.CurrentPage - 1)" aria-label="Previous">
						<span aria-hidden="true">&lsaquo;</span>
					</a>
				</li>
				}
				@for (int i = (Model.CurrentPage >= 4 ? Model.CurrentPage - 2 : 1); i <= Model.NumberOfPages && i <= (Model.CurrentPage + 2); i++)
				{
					if (Model.CurrentPage == i)
					{
						<li class="page-item active"><a class="page-link disabled-link" asp-route-page="@i">@i</a></li>
					}
					else
					{
						<li class="page-item"><a class="page-link" asp-route-page="@i">@i</a></li>
					}
				}
				@if (Model.CurrentPage != Model.NumberOfPages)
				{
				<li class="page-item">
					<a class="page-link" asp-route-page="@(Model.CurrentPage + 1)" aria-label="Next">
						<span aria-hidden="true">&rsaquo;</span>
					</a>
				</li>
				<li class="page-item">
					<a class="page-link" asp-route-page="@Model.NumberOfPages" aria-label="Last">
						<span aria-hidden="true">&raquo;</span>
					</a>
				</li>
				}
			</ul>
		}
		else
		{
			<div class="text-center">
			<p>No sets match the filters.</p>
			</div>
		}
	}
</nav>