<div class="modal modal-lg" id="previewModal" tabindex="-1" role="dialog" aria-hidden="true">
	<div class="modal-dialog modal-dialog-scrollable modal-dialog-centered" role="document">
		<div class="modal-content">
			<div class="modal-header text-light d-flex align-items-start mx-2">
				<div>
					<p class="text-info modal-title h4"></p>
				</div>
				<button type="button" class="btn-close d-none d-sm-block ms-2 p-3" data-bs-dismiss="modal"
					aria-label="Close"></button>
			</div>
			<div id="card-preview-scrollable" class="modal-body text-light">
				<p class="cardset-description text-justified d-none mx-2 pb-2"></p>
				<p class="text-info mx-2 mb-0 h5">Terms in set:</p>
				<div class="terms-body"></div>
			</div>
			<div class="modal-footer d-flex justify-content-end mx-3">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
				<a id="studyButton" class="btn btn-info flex-grow-1 flex-sm-grow-0">Study</a>
			</div>
		</div>
	</div>
</div>
<script language="javascript">
	document.addEventListener('DOMContentLoaded', function (event) {
		var PostBackURL = '@Url.Content("~/")' + "Sets/GetCardSetPreview/";
		var firstLoadComplete;
		var id = undefined;
		var modalTermsBody = document.querySelector("#previewModal .terms-body");
		var modalTitle = document.querySelector("#previewModal .modal-title");
		var modalDescription = document.querySelector("#previewModal .cardset-description")
		var previewButton = document.querySelectorAll(".previewButton");
		var studyButton = document.querySelector("#studyButton");
		var loadingData = false;

		previewButton.forEach(button => button.addEventListener('click', async () => {
			modalTitle.textContent = button.getAttribute("data-title");
			modalDescription.textContent = "";

			var cardSetDescription = button.getAttribute("data-description");
			if (cardSetDescription.length > 0) {
				modalDescription.classList.replace('d-none', 'd-block');
				modalDescription.textContent = button.getAttribute("data-description");
			}
			else if (modalDescription.classList.contains("d-block")) {
				modalDescription.classList.replace("d-block", "d-none");
			}

			id = button.getAttribute('data-id');
			studyButton.setAttribute('href', '/Sets/' + id);
			modalTermsBody.innerHTML = "<p class='text-center'>Loading terms...</p>";
			firstLoadComplete = false;
			loadingData = true;
			await fetch(PostBackURL + id + "/" + 0, {
				method: "GET",
				headers: {
					'Content-Type': 'application/json; charset=utf-8'
				}
			})
				.then((response) => response.text())
				.then((data) => {
					modalTermsBody.innerHTML = data;
					firstLoadComplete = true;
					loadingData = false;
				})
		}));
		var cardPreviewDiv = document.querySelector("#card-preview-scrollable");
		var qaPreviewElements;
		cardPreviewDiv.addEventListener('scroll', async (event) => {
			qaPreviewElementsCount = document.querySelectorAll('.set-qa-preview').length;
			var element = event.target;
			if ((
				element.scrollHeight - element.scrollTop - element.clientHeight >= 0 &&
				element.scrollHeight - element.scrollTop - element.clientHeight <= 10
			) && firstLoadComplete && !loadingData) {
				loadingData = true;
				await fetch(PostBackURL + id + '/' + qaPreviewElementsCount, {
					method: "GET",
					headers: {
						'Content-Type': 'application/json; charset=utf-8'
					}
				})
					.then((response) => response.text())
					.then((data) => {
						modalTermsBody.innerHTML += data;
						firstCardsLoaded = true;
						loadingData = false;
					})
			}
		})

	})
</script>
